
%!encoding:       utf-8
%!options(html):  --css-sugar -o hotkeys.html
%!style(html):    http://bugn.berlios.de/styles.css
%!preproc(html):  '%%html: '         ''
%!postproc(html): '<HEAD>'           '<HEAD>\n<TITLE>berliOS project: bug.n -- Hotkeys</TITLE>'
%!postproc(html): '<HEAD>'           '<HEAD>\n<LINK REL="icon" HREF="http://bugn.berlios.de/images/bugn.ico" />'
%!postproc(html): '<HEAD>'           '<HEAD>\n<META NAME="author" CONTENT="joten" />'
%!postproc(html): '<HEAD>'           '<HEAD>\n<META NAME="keywords" CONTENT="AutoHotkey, joten, bug.n, tiling, window management" />'
%!postproc(html): '<HEAD>'           '<HEAD>\n<META NAME="description" CONTENT="berliOS project: bug.n - Tiling Window Manager" />'
%!postproc(html): '<TD><IMG ALIGN="middle" SRC="bugn.png"' '<TD ID="bugn"><IMG ALIGN="middle" SRC="http://bugn.berlios.de/images/bugn.png"'
%!postproc(html): ' -- '             ' &ndash; '
%!postproc(html): 'hotkeys.png"'     'http://bugn.berlios.de/images/hotkeys.png"'
%!postproc(html): 'jn.png"'          'http://bugn.berlios.de/images/jn.png"'
%!postproc(html): '\(c\)'            '&copy;'
%!options(txt):   -o hotkeys.txt
%!preproc(txt):   '%%txt: '          ''
%!postproc(txt):  '<DIV ID="frame">' ''
%!postproc(txt):  '<BR>'             ''

''' <DIV ID="frame">
%%html: ''' <DIV CLASS="header">
%%html: | [bugn.png]  | bug.n -- Hotkeys  |                        [hotkeys.png]
%%txt: =bug.n -- Hotkeys=
%%html: ------------------------------------------------------------------------
%%html: ''' </DIV>

=== General description ===

**format**: <modifier><key>::<function>(<argument>)''<BR>''
**modifier**:
- ! = Alt (Mod1Mask)
- ^ = Ctrl (ControlMask)
- + = Shift (ShiftMask)
- # = LWin (Mod4Mask)


You will have to press all keys of a hotkey at the same time beginning
with the modifier for calling the associated function, e. g. "#^q" means
pressing the left Windows key and the shift key and the q key
(WIN+CTRL+Q) for quitting bug.n.


=== Window related hotkeys ===

: #Down::**View_activateWindow(+1)**
  Activate the next window in the active view.

: #Up::**View_activateWindow(-1)**
  Activate the previous window in the active view.

: #+Down::**View_shuffleWindow(+1)**
  Move the active window to the next position in the window list of the
  view.

: #+Up::**View_shuffleWindow(-1)**
  Move the active window to the previous position in the window list of
  the view.

: #+Enter::**View_shuffleWindow(0)**
  Move the active window to the first position in the window list of
  the view.

: #+c::**Manager_closeWindow()**
  Close the active window.

: #+d::**Manager_toggleDecor()**
  Show / Hide the title bar of the active window.

: #+f::**View_toggleFloating()**
  Toggle the floating status of the active window (i. e. dis- / regard
  it when tiling).

: #+m::**Manager_moveWindow()**
  Move the active window by key (only floating windows).

: #+s::**Manager_sizeWindow()**
  Resize the active window by key (only floating windows).

: #+x::**Manager_maximizeWindow()**
  Move and resize the active window to the size of the work area (only
  floating windows).

: #i::**Manager_getWindowInfo()**
  Get information for the active window (id, title, class, process
  name, style, geometry, tags and floating state).

: #+i::**Manager_getWindowList()**
  Get a window list for the active view (id, title and class).


=== Layout related hotkeys ===

: #Tab::**View_setLayout(-1)**
  Set the previously set layout. You may also use View_setLayout(">")
  for setting the next layout in the layout array.

: #f::**View_setLayout(3)**
  Set the 3rd defined layout (i. e. floating layout in the default
  configuration).

: #m::**View_setLayout(2)**
  Set the 2nd defined layout (i. e. monocle layout in the default
  configuration).

: #t::**View_setLayout(1)**
  Set the 1st defined layout (i. e. tile layout in the default
  configuration).

: #Left::**View_setMFactor(-0.05)**
  Reduce the size of the master area in the active view (only for the
  "tile" layout).

: #Right::**View_setMFactor(+0.05)**
  Enlarge the size of the master area in the active view (only for the
  "tile" layout).

: #^t::**View_rotateLayoutAxis(1, +1)**
  Rotate the layout axis (i. e. 2 -> 1 = vertical layout,
  1 -> 2 = horizontal layout, only for the "tile" layout).

: #^Enter::**View_rotateLayoutAxis(1, +2)**
  Mirror the layout axis (i. e. -1 -> 1 / 1 -> -1 = master on the left
  / right side, -2 -> 2 / 2 -> -2 = master at top / bottom, only for
  the "tile" layout).

: #^Tab::**View_rotateLayoutAxis(2, +1)**
  Rotate the master axis (i. e. 3 -> 1 = x-axis = horizontal stack,
  1 -> 2 = y-axis = vertical stack, 2 -> 3 = z-axis = monocle, only for
  the "tile" layout).

: #^+Tab::**View_rotateLayoutAxis(3, +1)**
  Rotate the stack axis (i. e. 3 -> 1 = x-axis = horizontal stack,
  1 -> 2 = y-axis = vertical stack, 2 -> 3 = z-axis = monocle, only for
  the "tile" layout).

: #^Left::**View_setMSplit(+1)**
  Move the master splitter, i. e. decrease the number of windows in the
  master area (only for the "tile" layout).

: #^Right::**View_setMSplit(-1)**
  Move the master splitter, i. e. increase the number of windows in the
  master area (only for the "tile" layout).


=== Tag / View related hotkeys ===

: #BackSpace::**Monitor_activateView(-1)**
  Activate the previously activated view. You may also use
  Monitor_activateView("<") or Monitor_activateView(">") for activating
  the previous or next adjacent view.

: #+0::**Monitor_setWindowTag(0)**
  Tag the active window with all tags (1 ... Config_viewCount). You may
  also use Monitor_setWindowTag("<") or Monitor_setWindowTag(">") for
  setting the tag of the previous or next adjacent to the current view.

: #<tag>::**Monitor_activateView(<tag>)**
  Activate the view (choose one out of 1 ... Config_viewCount).

: #+<tag>::**Monitor_setWindowTag(<tag>)**
  Tag the active window (choose one tag out of 1 ... Config_viewCount).

: #^<tag>::**Monitor_toggleWindowTag(<tag>)**
  Add / Remove the tag (1 ... Config_viewCount) for the active window,
  if it is not / is already set.


=== Monitor related hotkeys ===

: #.::**Manager_activateMonitor(+1)**
  Activate the next monitor in a multi-monitor environment.

: #,::**Manager_activateMonitor(-1)**
  Activate the previous monitor in a multi-monitor environment.

: #+.::**Manager_setWindowMonitor(+1)**
  Set the active window to the active view on the next monitor in a
  multi-monitor environment.

: #+,::**Manager_setWindowMonitor(-1)**
  Set the active window to the active view on the previous monitor in a
  multi-monitor environment.

: #^+.::**Manager_setViewMonitor(+1)**
  Set all windows of the active view on the active view of the next
  monitor in a multi-monitor environment.

: #^+,::**Manager_setViewMonitor(-1)**
  Set all windows of the active view on the active view of the previous
  monitor in a multi-monitor environment.

: #+Space::**Monitor_toggleBar()**
  Hide / Show the bar (bug.n status bar) on the active monitor.

: #Space::**Monitor_toggleTaskBar()**
  Hide / Show the task bar.


=== Application related hotkeys ===

: #y::**Bar_toggleCommandGui()**
  Open the command GUI for executing programmes or bug.n functions.

: #^e::**Run, edit %Config_filePath%
  Open the configuration file in the standard text editor.

: #^s::**Config_saveSession()**
  Save the current state of monitors, views, layouts to the
  configuration file.

: #^r::**Main_reload()**
  Reload bug.n (i. e. the configuration and its dependent settings)
  without deleting the window lists of bug.n and restoring windows.
  ! It does not reset internal configuration variables, the tray icon or
  menu, hotkeys (unless set explicitly in Config.ini), individual window
  settings like Config_showBorder (since windows might be hidden) or
  hiding the title bar, the monitor count or views.
  ! It does not reload functions.
  ! Changed rules are only applied to new windows.

: #^q::**ExitApp
  Quit bug.n, restore the default Windows UI and show all windows.


''<BR>''
%%html: ''' <DIV CLASS="footer">
------------------------------------------------------------------------
%%txt: (c) 2010-2012 joten, last modified %%date(%d.%m.%Y)
%%html: | (c) 2010-2012 joten, last modified %%date(%d.%m.%Y)  |  [jn.png]
%%html: ''' </DIV>
%%html: ''' </DIV>
